{"version":3,"sources":["components/FormValid.js","components/ContactForm.js","components/ContactTable.js","components/Adresar.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","email","password","emailError","passwordError","FormValid","state","toAdresar","handleChange","e","setState","target","name","value","validate","test","handleSubmit","event","preventDefault","this","to","Form","className","onSubmit","Segment","Input","label","placeholder","onChange","style","fontSize","color","type","Button","positive","React","Component","errorStyle","ContactForm","firstName","firstNameError","lastName","lastNameError","birthDate","contactType","contactTypeError","contactInfo","contactInfoError","handleValidation","err","length","props","FormGroup","widths","Field","control","onClick","Icon","iconStyle","ContactTable","data","tableHeader","handleRemove","startEditing","editIdx","stopEditing","handleSort","sortDirection","columnToSort","showFavorite","clickFav","isFavorite","useState","rowNr","setRowNr","pageNr","setPageNr","pageRows","slice","pagination","Table","stackable","Header","Row","map","x","i","HeaderCell","call","Body","currentlyEditing","head","k","Cell","row","Footer","colSpan","Menu","floated","Number","Item","disabled","icon","invertDirect","asc","desc","Adresar","query","columnToQuery","updatedValue","fields","columnName","filter","tableRow","idx","console","log","lowerCaseQuery","toLowerCase","submiting","marginLeft","width","index","addFavorite","orderBy","includes","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iXAMMA,G,OAAe,CACnBC,MAAO,GACPC,SAAU,GACVC,WAAY,GACZC,cAAe,KAKIC,E,4MACnBC,MAAQ,CAAEN,eAAcO,UAHR,O,EAMhBC,aAAe,SAAAC,GACb,EAAKC,SAAL,eACID,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAI/BC,SAAW,WACT,IAAIX,EAAa,GACbC,EAAgB,GAiBpB,OAfK,EAAKE,MAAMJ,WACfE,EAAgB,wBAGZ,cAAcW,KAAK,EAAKT,MAAMJ,YACjCE,EAAgB,sBAEb,iBAAiBW,KAAK,EAAKT,MAAMJ,YACpCE,EAAgB,sBAGb,eAAeW,KAAK,EAAKT,MAAML,SAClCE,EAAa,qBAGXA,IAAcC,IAChB,EAAKM,SAAS,CAAEP,aAAYC,mBACrB,I,EAMXY,aAAe,SAAAC,GACbA,EAAMC,iBACU,EAAKJ,YAEnB,EAAKJ,SAASV,GACd,EAAKU,UAAS,iBAAO,CACnBH,WAAW,OAIb,EAAKG,SAAS,CACZT,MAAO,GACPC,SAAU,M,uDAUd,OAA6B,IAAzBiB,KAAKb,MAAMC,UACN,cAAC,IAAD,CAAUa,GAAG,aAKpB,cAACC,EAAA,EAAD,CAAMC,UAAU,aAAaC,SAAUJ,KAAKH,aAA5C,SACE,eAACQ,EAAA,EAAD,CACEF,UAAU,kBADZ,UAGE,8CACA,cAACD,EAAA,EAAKI,MAAN,CACEC,MAAM,QACNJ,UAAU,cACVV,KAAK,QACLe,YAAY,QACZd,MAAOM,KAAKb,MAAML,MAClB2B,SAAUT,KAAKX,eAEjB,qBAAKqB,MAAO,CAAEC,SAAU,OAAQC,MAAO,OAAvC,SACGZ,KAAKb,MAAMH,aAEd,cAACkB,EAAA,EAAKI,MAAN,CACEC,MAAM,UACNJ,UAAU,cACVU,KAAK,WACLpB,KAAK,WACLe,YAAY,UACZd,MAAOM,KAAKb,MAAMJ,SAClB0B,SAAUT,KAAKX,eAEjB,qBAAKqB,MAAO,CAAEC,SAAU,OAAQC,MAAO,OAAvC,SACGZ,KAAKb,MAAMF,gBAGd,cAAC6B,EAAA,EAAD,CACEX,UAAU,eACVY,UAAQ,EACRF,KAAK,SAHP,8B,GA9F6BG,IAAMC,W,kCCXvCC,G,OAAa,CACbN,MAAO,MACPD,SAAU,KAgKDQ,E,4MA3JbhC,MAAQ,CACNiC,UAAW,GACXC,eAAgB,GAChBC,SAAU,GACVC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,iBAAkB,GAClBC,YAAY,GACZC,iBAAiB,I,EAGnBvC,aAAe,SAAAC,GACb,EAAKC,SAAL,eACID,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAI/BmC,iBAAmB,WACjB,IAAIC,GAAM,EAgCV,OA7BI,EAAK3C,MAAMiC,UAAUW,OAAS,GAChCD,GAAM,EACN,EAAK3C,MAAMkC,eAAiB,qBACnB,EAAKlC,MAAMiC,UAAUW,OAAS,MACvCD,GAAM,EACN,EAAK3C,MAAMkC,eAAiB,gDAE1B,EAAKlC,MAAMmC,SAASS,OAAS,GAC/BD,GAAM,EACN,EAAK3C,MAAMoC,cAAgB,yBAClB,EAAKpC,MAAMmC,SAASS,OAAS,MACtCD,GAAM,EACN,EAAK3C,MAAMoC,cAAgB,oDAEzB,EAAKpC,MAAMsC,YAAYM,OAAS,IAClCD,GAAM,EACN,EAAK3C,MAAMuC,iBAAmB,6BAE5B,EAAKvC,MAAMsC,YAAYM,OAAS,IAClCD,GAAM,EACN,EAAK3C,MAAMyC,iBAAmB,yBAE5BE,GACF,EAAKvC,SAAL,2BACK,EAAKJ,OA1BG,KA+BR2C,G,EAGTjC,aAAe,SAAAP,GACbA,EAAES,iBAEiB,EAAK8B,qBAEtB,EAAKtC,SAAS,CACZ6B,UAAW,GACXC,eAAgB,GAChBC,SAAU,GACVC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,iBAAkB,GAClBC,YAAY,GACZC,iBAAiB,KAEnB,EAAKI,MAAM5B,SAAS,EAAKjB,S,uDAQnB,IAAD,OACP,OACE,eAACe,EAAA,EAAD,CAAMC,UAAU,eAAhB,UACE,eAAC8B,EAAA,EAAD,CAAY9B,UAAU,aAAa+B,OAAO,QAA1C,UAEI,cAAChC,EAAA,EAAKI,MAAN,CACEH,UAAU,QACfV,KAAK,YACJC,MAAOM,KAAKb,MAAMiC,UAClBZ,YAAY,MACZC,SAAU,SAAAnB,GAAC,OAAI,EAAKD,aAAaC,MAK/B,cAACY,EAAA,EAAKI,MAAN,CACEH,UAAU,QACXV,KAAK,WACRC,MAAOM,KAAKb,MAAMmC,SAClBd,YAAY,UACZC,SAAU,SAAAnB,GAAC,OAAI,EAAKD,aAAaC,MAIjC,cAACY,EAAA,EAAKI,MAAN,CACEH,UAAU,QAEZU,KAAK,OACLpB,KAAK,YACLC,MAAOM,KAAKb,MAAMqC,UAClBhB,YAAY,qBACZC,SAAU,SAAAnB,GAAC,OAAI,EAAKD,aAAaC,MAInC,eAACY,EAAA,EAAKiC,MAAN,CAAYhC,UAAU,QAAQiC,QAAQ,SAAS3C,KAAK,cAAce,YAAY,iBAAiBd,MAAOM,KAAKb,MAAMO,MAAOe,SAAUT,KAAKX,aAAvI,UACI,wBAAQK,MAAM,GAAd,qBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,sBAMA,cAACQ,EAAA,EAAKI,MAAN,CACEH,UAAU,QACbV,KAAK,cACNC,MAAOM,KAAKb,MAAMwC,YAClBnB,YAAY,UACZC,SAAU,SAAAnB,GAAC,OAAI,EAAKD,aAAaC,MAInC,eAACY,EAAA,EAAKY,OAAN,CAAaC,UAAQ,EAACsB,QAAS,SAAA/C,GAAC,OAAI,EAAKO,aAAaP,IAAtD,UAA0D,cAACgD,EAAA,EAAD,CAAM7C,KAAK,QAArE,eAEA,eAACwC,EAAA,EAAD,CAAW9B,UAAU,gBAArB,UACG,mBAAGO,MAAOQ,EAAV,SACElB,KAAKb,MAAMkC,iBAEb,mBAAGX,MAAOQ,EAAV,SACElB,KAAKb,MAAMoC,gBAEd,uBACC,mBAAGb,MAAOQ,EAAV,SACElB,KAAKb,MAAMuC,mBAEL,mBAAGhB,MAAOQ,EAAV,SACElB,KAAKb,MAAMyC,6B,GApJNX,a,2BCLpBsB,G,OAAY,CACd5B,SAAU,WAmKC6B,EArFM,SAAC,GAUF,IAVIC,EAUL,EAVKA,KAAMC,EAUX,EAVWA,YAAaC,EAUxB,EAVwBA,aACvCC,EASe,EATfA,aACAC,EAQe,EARfA,QACFC,EAOiB,EAPjBA,YACEzD,EAMe,EANfA,aACA0D,EAKe,EALfA,WACAC,EAIe,EAJfA,cACFC,EAGiB,EAHjBA,aAEFC,GACmB,EAFjBC,SAEiB,EADnBD,cACEE,EAAiB,EAAjBA,WAAiB,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEWF,mBAAS,GAFpB,mBAEVG,EAFU,KAEFC,EAFE,KAMXC,EAHY,SAACjB,EAAMa,EAAOE,GAC9B,OAAOf,EAAKkB,OAAOH,EAAS,GAAKF,EAAOE,EAASF,GAElCM,CAAWnB,EAAMa,EAAOE,GAEzC,OACE,eAACK,EAAA,EAAD,CAAOC,WAAS,EAAhB,UACE,cAACD,EAAA,EAAME,OAAP,UACE,eAACF,EAAA,EAAMG,IAAP,WAEItB,EAAYuB,KAAI,SAACC,EAAGC,GAAJ,OAAU,cAACN,EAAA,EAAMO,WAAP,UAAkC,sBAAK/B,QAAS,kBAAMU,EAAWmB,EAAEG,KAAO,aAAxC,UAC1D,+BAAOH,EAAEzE,OACPwD,IAAiBiB,EAAEG,KACC,QAAlBrB,EAA0B,cAACV,EAAA,EAAD,CAAM7C,KAAK,8BAAiC,cAAC6C,EAAA,EAAD,CAAM7C,KAAK,4BAC/E,SAJkB,aAA6B0E,OASzD,cAACN,EAAA,EAAMO,WAAP,0BAKJ,cAACP,EAAA,EAAMS,KAAP,UACGZ,EAASO,KAAI,SAACC,EAAGC,GAAJ,OAhHT,SAACD,EAAGC,EAAGzB,EAAaC,EAC/BC,EACAC,EACAxD,EACCyD,EACAK,EACAC,GAEA,IAAMmB,EAAmB1B,IAAYsB,EAEpC,OAEE,eAACN,EAAA,EAAMG,IAAP,WACGtB,EAAYuB,KAAI,SAACO,EAAMC,GAAP,OACf,eAACZ,EAAA,EAAMa,KAAP,WAGGH,EACD,cAACrE,EAAA,EAAKI,MAAN,CACEb,KAAM+E,EAAKH,KACX5D,SAAU,SAAAnB,GAAC,OAAID,EAAaC,EAAGkF,EAAKH,KAAMF,IAC1CzE,MAAOwE,EAAEM,EAAKH,QAGhBH,EAAEM,EAAKH,MAVT,oBAEcI,OAWhB,cAACZ,EAAA,EAAMa,KAAP,UAEGH,EACC,eAACV,EAAA,EAAMa,KAAP,CACAvE,UAAU,iBADV,UAEA,cAACmC,EAAA,EAAD,CAAM5B,MAAO6B,EAAWpC,UAAU,OAAOV,KAAM2D,EAAWe,GAClD,OACF,iBAGJ,cAAC7B,EAAA,EAAD,aACED,QAAS,kBAAMc,EAASgB,IACxBzD,MAAO6B,EAAW9C,KAAK,SAFzB,WAE0C,kBAAMqD,QAChD,cAACR,EAAA,EAAD,CACE5B,MAAO6B,EACXF,QAAS,kBAAMM,EAAawB,IAC5B1E,KAAK,+BAGH,eAACoE,EAAA,EAAMa,KAAP,CACCvE,UAAU,iBADX,UAGE,cAACmC,EAAA,EAAD,CACED,QAAS,kBAAMc,EAASgB,IACxBhE,UAAU,OACVO,MAAO6B,EACP9C,KAAM2D,EAAWe,GACf,OACA,iBAEJ,cAAC7B,EAAA,EAAD,CACE5B,MAAO6B,EACP9C,KAAK,OAAO4C,QAAS,kBAAMO,EAAauB,MAC1C,cAAC7B,EAAA,EAAD,CACE5B,MAAO6B,EACbF,QAAS,kBAAMM,EAAawB,IAC5B1E,KAAK,mCAnDX,aAAsB0E,IAoGIQ,CAAIT,EAAGC,EAAGzB,EAAaC,EAC7CC,EACAC,EACAxD,EACAyD,EACAI,EACRE,QAII,cAACS,EAAA,EAAMe,OAAP,UACE,cAACf,EAAA,EAAMG,IAAP,UAEE,cAACH,EAAA,EAAMO,WAAP,CAAkBS,QAAQ,IAA1B,SACE,eAACC,EAAA,EAAD,CAAMC,QAAQ,QAAQnB,YAAU,EAAhC,UACE,cAAC1D,EAAA,EAAKiC,MAAN,CAAaC,QAAQ,SACnBjC,UAAU,aACVT,MAAO4D,EAAO7C,SAAU,SAACnB,GAAD,OAAOiE,EAASyB,OAAO1F,EAAEE,OAAOE,SAF1D,SAII,CAAC,GAAI,GAAI,IAAIuE,KAAI,SAAAX,GAAK,OACpB,wBAAoB5D,MAAO4D,EAA3B,SACGA,GADUA,QAMnB,cAACwB,EAAA,EAAKG,KAAN,CACEC,SAAqB,IAAX1B,EACVnB,QAAS,kBAAMoB,EAAUD,EAAS,IAClC2B,MAAI,EAHN,SAIE,cAAC7C,EAAA,EAAD,CAAM7C,KAAK,mBAET,cAACqF,EAAA,EAAKG,KAAN,CAAW5C,QAAS,kBAAMoB,EAAU,IAApC,eACA,cAACqB,EAAA,EAAKG,KAAN,CAAW5C,QAAS,kBAAMoB,EAAU,IAApC,eACA,cAACqB,EAAA,EAAKG,KAAN,CAAW5C,QAAS,kBAAMoB,EAAU,IAApC,eACA,cAACqB,EAAA,EAAKG,KAAN,CAAW5C,QAAS,kBAAMoB,EAAU,IAApC,eACA,cAACqB,EAAA,EAAKG,KAAN,CAAW5C,QAAS,kBAAMoB,EAAUD,EAAS,IAAK2B,MAAI,EAAtD,SACF,cAAC7C,EAAA,EAAD,CAAM7C,KAAK,iC,kBCxJrB2F,EAAe,CACnBC,IAAK,OACLC,KAAM,OAkMOC,E,4MA7LbpG,MAAQ,CACNsD,KAAM,CACH,CACCrB,UAAW,OACXE,SAAU,SACVE,UAAW,YACXC,YAAa,QACbE,YAAa,eAEf,CACEP,UAAW,QACXE,SAAU,WACVE,UAAW,YACXC,YAAa,WACbE,YAAa,cAEf,CACEP,UAAW,UACXE,SAAU,UACVE,UAAW,YACXC,YAAa,QACbE,YAAa,UAEf,CACEP,UAAW,YACXE,SAAU,YACVE,UAAW,YACXC,YAAa,QACbE,YAAa,UAEf,CACEP,UAAW,MACXE,SAAU,WACVE,UAAW,aACXC,YAAa,QACbE,YAAa,iBAIjBkB,SAAU,EACVI,aAAc,GACdD,cAAe,OACfwC,MAAO,GACPC,cAAe,YACfrC,WAAY,GACZF,cAAc,G,EAIhBzC,SAAW,SAACiF,GACV,EAAKnG,SAAS,CACZoG,OAAO,2BACJ,EAAKxG,MAAMwG,QACXD,M,EAIP3C,WAAa,SAAC6C,GACZ,EAAKrG,UAAS,SAAAJ,GAAK,MAAK,CACtB8D,aAAc2C,EACd5C,cAAe7D,EAAM8D,eAAiB2C,EAAaR,EAAajG,EAAM6D,eAAiB,W,EAK3FL,aAAe,SAACwB,GACd,EAAK5E,UAAS,SAAAJ,GAAK,MAAK,CACtBsD,KAAMtD,EAAMsD,KAAKoD,QAAO,SAACC,EAAUC,GAAX,OAAmBA,IAAQ5B,U,EAIvDvB,aAAe,SAACuB,GACd,EAAK5E,SAAS,CAAEsD,QAASsB,K,EAG3BrB,YAAc,WACZkD,QAAQC,IAAI,EAAK9G,MAAMsD,KAAKW,YAC5B,EAAK7D,SAAS,CAACsD,SAAU,K,EAG3BM,SAAW,SAACgB,GACX,EAAK5E,UAAS,SAAAJ,GAAK,MAAK,CACvBiE,WAAW,2BAAMjE,EAAMiE,YAAb,kBAA0Be,GAAKhF,EAAMiE,WAAWe,U,EAI5D9E,aAAe,SAACC,EAAGG,EAAM0E,GAAO,IACvBzE,EAASJ,EAAEE,OAAXE,MACP,EAAKH,UAAS,SAAAJ,GAAK,MAAK,CACpBsD,KAAMtD,EAAMsD,KAAKwB,KAAI,SAAC6B,EAAUC,GAAX,OAAmBA,IAAQ5B,EAAR,2BAAiB2B,GAAjB,kBAA4BrG,EAAOC,IAAUoG,U,uDAK1F,IAAD,OACQI,EAAiBlG,KAAKb,MAAMqG,MAAMW,cACxC,OACE,gCACE,cAAC,EAAD,CAEE/F,SAAU,SAAAgG,GAAS,OAAI,EAAK7G,SAAS,CACrCkD,KAAK,GAAD,mBAAM,EAAKtD,MAAMsD,MAAjB,CAAuB2D,SAE7B,cAAClG,EAAA,EAAD,CAAMC,UAAU,cAAhB,SACE,eAAC8B,EAAA,EAAD,CACEvB,MAAO,CAAC2F,WAAY,QADtB,UAGE,eAACnG,EAAA,EAAKiC,MAAN,CACEmE,MAAO,EACX9F,YAAY,UACZ4B,QAAQ,SACR1C,MAAOM,KAAKb,MAAMO,MAClBe,SAAU,SAACnB,EAAGiH,EAAO7G,GAAX,OAAqB,EAAKH,SAAS,CAACkG,cAAe/F,KAL3D,UAOJ,wBAAQA,MAAM,GAAd,qBACA,wBAAQA,MAAM,YAAd,iBACA,wBAAQA,MAAM,WAAd,qBACA,wBAAQA,MAAM,cAAd,wBAEI,cAACQ,EAAA,EAAKI,MAAN,CACEgG,MAAO,EACX9F,YAAY,aACZd,MAAOM,KAAKb,MAAMqG,MAClB/E,SAAU,SAAAnB,GAAC,OAAI,EAAKC,SAAS,CAACiG,MAAOlG,EAAEE,OAAOE,WAE5C,eAACQ,EAAA,EAAKY,OAAN,CACEC,UAAQ,EACRL,MAAO,CACL4F,MAAO,QAHX,UAME,cAAChE,EAAA,EAAD,CAAM7C,KAAK,SANb,mBAUJ,cAAC,EAAD,CACE0D,SAAUnD,KAAKmD,SACfqD,YAAaxG,KAAKb,MAAMqH,YACxBpD,WAAYpD,KAAKb,MAAMiE,WACrBT,aAAc3C,KAAK2C,aACnBC,aAAc5C,KAAK4C,aACnBC,QAAS7C,KAAKb,MAAM0D,QACpBC,YAAa9C,KAAK8C,YAClBzD,aAAcW,KAAKX,aACnB0D,WAAY/C,KAAK+C,WACjBE,aAAcjD,KAAKb,MAAM8D,aACzBD,cAAehD,KAAKb,MAAM6D,cAC1BP,KAAMgE,IAAQzG,KAAKb,MAAMqG,MACnBxF,KAAKb,MAAMsD,KAAKoD,QAAO,SAAA3B,GAAC,OACtBA,EAAE,EAAK/E,MAAMsG,eACVU,cACAO,SAASR,MAEdlG,KAAKb,MAAMsD,KACfzC,KAAKb,MAAM8D,aACXjD,KAAKb,MAAM6D,eAIfN,YAAa,CACX,CACEjD,KAAM,MACN4E,KAAM,aAER,CACE5E,KAAM,UACN4E,KAAM,YAER,CACE5E,KAAM,qBACN4E,KAAM,aAER,CACE5E,KAAM,iBACN4E,KAAM,eAER,CACE5E,KAAM,UACN4E,KAAM,yB,GApLEpD,aCcP0F,MAdf,WACE,OACG,cAAC,IAAD,UACA,qBAAKxG,UAAU,MAAf,SACG,eAAC,IAAD,WACI,cAAC,IAAD,CAAOyG,OAAK,EAACC,KAAK,IAAIC,UAAW5H,IACjC,cAAC,IAAD,CAAO0H,OAAK,EAACC,KAAK,WAAWC,UAAWvB,YCNrCwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.081a4e7c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Form, Segment } from 'semantic-ui-react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport './formValid.css'\r\n\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  emailError: \"\",\r\n  passwordError: \"\"\r\n};\r\n\r\nconst toAdresar = false;\r\n\r\nexport default class FormValid extends React.Component {\r\n  state = { initialState, toAdresar };\r\n  //history = this.props;\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n       [e.target.name]: e.target.value\r\n     })\r\n  };\r\n\r\n  validate = () => {\r\n    let emailError = \"\";\r\n    let passwordError = \"\";\r\n\r\n    if (!this.state.password) {\r\n     passwordError = \"Upišite lozinku\";\r\n    }\r\n    \r\n    if (!/(?=.*[0-9])/.test(this.state.password)) {\r\n      passwordError = \"Nesipravna lozinka\"\r\n    }\r\n    if (!/(?=.*[+!#$\\-])/.test(this.state.password)) {\r\n      passwordError = \"Nesipravna lozinka\"\r\n    }\r\n\r\n    if (!/\\S+@\\S+\\.\\S+/.test(this.state.email)) {\r\n      emailError = \"Nepravilan email\";\r\n    }\r\n\r\n    if (emailError || passwordError) {\r\n      this.setState({ emailError, passwordError });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const isValid = this.validate();\r\n    if (isValid) {\r\n      this.setState(initialState);\r\n      this.setState(() => ({\r\n        toAdresar: true\r\n      }))\r\n      \r\n    } else {\r\n      this.setState({\r\n        email: \"\",\r\n        password: \"\",\r\n  \r\n      })\r\n    }\r\n  };\r\n  \r\n\r\n  render() {\r\n  \r\n\r\n    if (this.state.toAdresar === true) {\r\n      return <Redirect to='/Adresar' />\r\n    }\r\n\r\n    return (\r\n      \r\n      <Form className='login-form' onSubmit={this.handleSubmit}>\r\n        <Segment\r\n          className='login-container'\r\n        >\r\n          <h2>Prijavite se</h2>\r\n          <Form.Input\r\n            label='Email' \r\n            className='login-input'\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n          />\r\n          <div style={{ fontSize: '1rem', color: \"red\" }}>\r\n            {this.state.emailError}\r\n          </div>\r\n          <Form.Input\r\n            label='Lozinka'\r\n            className='login-input'\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Lozinka\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n          />\r\n          <div style={{ fontSize: '1rem', color: \"red\" }}>\r\n            {this.state.passwordError}\r\n          </div>\r\n        \r\n          <Button\r\n            className='login-button'\r\n            positive\r\n            type=\"submit\">\r\n            Prijava\r\n            </Button>\r\n          </Segment>\r\n      </Form>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Form, Icon, FormGroup } from 'semantic-ui-react';\r\nimport './contactForm.css';\r\n\r\nconst errorStyle = {\r\n      color: 'red',\r\n      fontSize: 12\r\n    };\r\n\r\n\r\nclass ContactForm extends Component {\r\n  state = { \r\n    firstName: '',\r\n    firstNameError: '',\r\n    lastName: '',\r\n    lastNameError: '',\r\n    birthDate: '',\r\n    contactType: '',\r\n    contactTypeError: '',\r\n    contactInfo:'',\r\n    contactInfoError:''\r\n   }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n       [e.target.name]: e.target.value\r\n     })\r\n  }\r\n\r\n  handleValidation = () => {\r\n    let err = false;\r\n    const errors = {};\r\n\r\n    if (this.state.firstName.length < 1) {\r\n      err = true\r\n      this.state.firstNameError = 'Upišite ime.'\r\n    } else if (this.state.firstName.length > 100) {\r\n      err = true\r\n      this.state.firstNameError = 'Ime ne smije imati više od 100 znakova.'\r\n    }\r\n    if (this.state.lastName.length < 1) {\r\n      err = true\r\n      this.state.lastNameError = 'Upišite prezime.'\r\n    } else if (this.state.lastName.length > 300) {\r\n      err = true\r\n      this.state.lastNameError = 'Prezime ne smije imati više od 100 znakova.'\r\n    }\r\n    if (this.state.contactType.length < 1) {\r\n      err = true;\r\n      this.state.contactTypeError = 'Odaberite vrstu kontakta.'\r\n    }\r\n    if (this.state.contactType.length < 1) {\r\n      err = true;\r\n      this.state.contactInfoError = 'Upišite kontakt.'\r\n    }\r\n    if (err) {\r\n      this.setState({\r\n        ...this.state,\r\n        ...errors\r\n      })\r\n    }\r\n    \r\n    return err;\r\n  }\r\n  \r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    \r\n    const errorCheck = this.handleValidation();\r\n    if (!errorCheck) {\r\n      this.setState({\r\n        firstName: '',\r\n        firstNameError: '',\r\n        lastName: '',\r\n        lastNameError: '',\r\n        birthDate: '',\r\n        contactType: \"\",\r\n        contactTypeError: '',\r\n        contactInfo:'',\r\n        contactInfoError:''\r\n      });\r\n      this.props.onSubmit(this.state);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  \r\n  render() { \r\n    return ( \r\n      <Form className='contact-form'>\r\n        <FormGroup  className='form-group' widths='equal'>\r\n          \r\n            <Form.Input\r\n              className='input'\r\n         name='firstName'\r\n          value={this.state.firstName}\r\n          placeholder='Ime'\r\n          onChange={e => this.handleChange(e)}\r\n          />\r\n            \r\n          \r\n          \r\n            <Form.Input\r\n              className='input'\r\n             name='lastName'\r\n          value={this.state.lastName}\r\n          placeholder='Prezime'\r\n          onChange={e => this.handleChange(e)}\r\n          />\r\n           \r\n            \r\n          <Form.Input\r\n            className='input'\r\n         \r\n          type='date'\r\n          name='birthDate'\r\n          value={this.state.birthDate}\r\n          placeholder='Datum rođenja'\r\n          onChange={e => this.handleChange(e)}\r\n        />\r\n        \r\n        \r\n        <Form.Field className='input' control='select' name='contactType' placeholder='Vrsta kontakta' value={this.state.value} onChange={this.handleChange}>\r\n            <option value=\"\">Odaberi</option>\r\n            <option value=\"Mobitel\">Mobitel</option>\r\n            <option value=\"Fiskni telefon\">Fiskni telefon</option>\r\n            <option value=\"Email\">Email</option>\r\n            <option value=\"Pager\">Pager</option>\r\n          </Form.Field>\r\n\r\n          \r\n        \r\n        \r\n            <Form.Input\r\n              className='input'\r\n           name='contactInfo'\r\n          value={this.state.contactInfo}\r\n          placeholder='Kontakt'\r\n          onChange={e => this.handleChange(e)}\r\n        />\r\n        \r\n        \r\n        <Form.Button positive onClick={e => this.handleSubmit(e)}><Icon name='add'/> Dodaj</Form.Button>   \r\n        </FormGroup>\r\n        <FormGroup className='err-container'>\r\n          {<p style={errorStyle}>\r\n            {this.state.firstNameError}\r\n          </p>}\r\n          {<p style={errorStyle}>\r\n            {this.state.lastNameError}\r\n          </p>}\r\n          <br/>\r\n          {<p style={errorStyle}>\r\n            {this.state.contactTypeError}\r\n          </p>}\r\n                  {<p style={errorStyle}>\r\n                    {this.state.contactInfoError}\r\n              </p>}\r\n        </FormGroup>\r\n      </Form>\r\n     );\r\n  }\r\n}\r\n \r\nexport default ContactForm;","import React, { useState } from 'react'\r\nimport { Icon, Menu, Table, Form, } from 'semantic-ui-react'\r\nimport './contactTable.css';\r\n\r\n\r\nconst iconStyle = {\r\n    fontSize: '1.1rem'\r\n}\r\n\r\n\r\n const row = (x, i, tableHeader, handleRemove,\r\n  startEditing,\r\n  editIdx,\r\n  handleChange,\r\n   stopEditing,\r\n   clickFav,\r\n   isFavorite,\r\n ) => {\r\n   const currentlyEditing = editIdx === i;\r\n  \r\n    return (\r\n   \r\n      <Table.Row key={`tr-${i}`} >\r\n        {tableHeader.map((head, k) =>\r\n          <Table.Cell\r\n            \r\n            key={`trc-${k}`}>\r\n            {currentlyEditing ? (\r\n            <Form.Input\r\n              name={head.call}\r\n              onChange={e => handleChange(e, head.call, i)}\r\n              value={x[head.call]}\r\n            />\r\n          ) : (\r\n            x[head.call]\r\n          )} </Table.Cell>\r\n            )}\r\n        <Table.Cell\r\n        >\r\n          {currentlyEditing ? (\r\n            <Table.Cell\r\n            className='icon-container'>\r\n            <Icon style={iconStyle} className='star' name={isFavorite[i]\r\n                  ? \"star\"\r\n                : \"star outline\"}\r\n                \r\n              />\r\n              <Icon\r\n                onClick={() => clickFav(i)}\r\n                style={iconStyle} name='check' onClick={() => stopEditing()} />\r\n              <Icon\r\n                style={iconStyle}\r\n            onClick={() => handleRemove(i)}\r\n            name='trash alternate outline'\r\n         /></Table.Cell>\r\n          ) : (\r\n              <Table.Cell\r\n               className='icon-container'\r\n              >\r\n                <Icon\r\n                  onClick={() => clickFav(i)}\r\n                  className='star'                \r\n                  style={iconStyle}\r\n                  name={isFavorite[i]\r\n                  ? \"star\"\r\n                  : \"star outline\"}\r\n                   />\r\n                <Icon\r\n                  style={iconStyle}\r\n                  name='edit' onClick={() => startEditing(i)} />\r\n                <Icon\r\n                  style={iconStyle}\r\n            onClick={() => handleRemove(i)}\r\n            name='trash alternate outline'\r\n         /></Table.Cell>\r\n          )}\r\n        </Table.Cell>\r\n        </Table.Row>\r\n      \r\n    )\r\n  }\r\n\r\n\r\n\r\nconst ContactTable = ({ data, tableHeader, handleRemove,\r\n    startEditing,\r\n    editIdx,\r\n  stopEditing,\r\n    handleChange,\r\n    handleSort,\r\n    sortDirection,\r\n  columnToSort,\r\n  clickFav,\r\nshowFavorite,\r\n  isFavorite }) => { \r\n  const [rowNr, setRowNr] = useState(15)\r\n  const [pageNr, setPageNr] = useState(1);\r\n const pagination = (data, rowNr, pageNr) => {\r\n    return data.slice((pageNr - 1) * rowNr, pageNr * rowNr);\r\n  }\r\n  const pageRows = pagination(data, rowNr, pageNr)\r\n\r\n  return (\r\n    <Table stackable>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          {\r\n            tableHeader.map((x, i) => <Table.HeaderCell key={`th-${i}`}><div onClick={() => handleSort(x.call = \"lastName\")}>\r\n              <span>{x.name}</span>{\r\n                columnToSort === x.call ? (\r\n                  sortDirection === 'asc' ? <Icon name='long arrow alternate down' /> : <Icon name='long arrow alternate up' />\r\n                ) : null\r\n              }\r\n            </div></Table.HeaderCell>)\r\n\r\n          }\r\n          <Table.HeaderCell>Opcije</Table.HeaderCell>\r\n\r\n        </Table.Row>\r\n      </Table.Header>\r\n\r\n      <Table.Body>\r\n        {pageRows.map((x, i) => row(x, i, tableHeader, handleRemove,\r\n          startEditing,\r\n          editIdx,\r\n          handleChange,\r\n          stopEditing,\r\n          showFavorite,\r\n  isFavorite))}\r\n  \r\n        \r\n      </Table.Body>\r\n      <Table.Footer>\r\n        <Table.Row>\r\n           \r\n          <Table.HeaderCell colSpan='6'>\r\n            <Menu floated='right' pagination>\r\n              <Form.Field  control='select'\r\n                className='link item '\r\n                value={rowNr} onChange={(e) => setRowNr(Number(e.target.value))}>\r\n                {\r\n                  [15, 30, 45].map(rowNr => (\r\n                    <option key={rowNr} value={rowNr}>\r\n                      {rowNr}\r\n                    </option>\r\n                  ))\r\n                    }\r\n                </Form.Field>\r\n              <Menu.Item\r\n                disabled={pageNr === 1}\r\n                onClick={() => setPageNr(pageNr - 1)}\r\n                icon>\r\n                <Icon name='chevron left' />\r\n                  </Menu.Item>\r\n                  <Menu.Item onClick={() => setPageNr(2)}>1</Menu.Item>\r\n                  <Menu.Item onClick={() => setPageNr(2)} >2</Menu.Item>\r\n                  <Menu.Item onClick={() => setPageNr(3)} >3</Menu.Item>\r\n                  <Menu.Item onClick={() => setPageNr(4)} >4</Menu.Item>\r\n                  <Menu.Item onClick={() => setPageNr(pageNr + 1)}  icon>\r\n                <Icon name='chevron right' />\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Footer>\r\n    </Table>\r\n  )\r\n}\r\n\r\nexport default ContactTable;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport ContactForm from './ContactForm';\r\nimport ContactTable from './ContactTable';\r\nimport orderBy from \"lodash/orderBy\"\r\nimport { Form, FormGroup, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst invertDirect = {\r\n  asc: 'desc',\r\n  desc: 'asc'\r\n}\r\n\r\nclass Adresar extends Component {\r\n\r\n  state = {\r\n    data: [\r\n       {\r\n        firstName: \"Tann\",\r\n        lastName: \"Gounin\",\r\n        birthDate: \"10.3.1991\",\r\n        contactType: \"Email\",\r\n        contactInfo: \"yJG2MuL5piY\"\r\n      },\r\n      {\r\n        firstName: \"Elana\",\r\n        lastName: \"Ricioppo\",\r\n        birthDate: \"10.3.1991\",\r\n        contactType: \"Email.uk\",\r\n        contactInfo: \"S7p9ReUoQe\"\r\n      },\r\n      {\r\n        firstName: \"Bentlee\",\r\n        lastName: \"Decourt\",\r\n        birthDate: \"10.3.1991\",\r\n        contactType: \"Email\",\r\n        contactInfo: \"MWU9hc\"\r\n      },\r\n      {\r\n        firstName: \"Hyacintha\",\r\n        lastName: \"Choudhury\",\r\n        birthDate: \"10.3.1991\",\r\n        contactType: \"Email\",\r\n        contactInfo: \"kRtWP1\"\r\n      },\r\n      {\r\n        firstName: \"Ari\",\r\n        lastName: \"Spedroni\",\r\n        birthDate: \"10.3.19911\",\r\n        contactType: \"Email\",\r\n        contactInfo: \"o78ibUPPmDlZ\"\r\n      },\r\n      \r\n    ],\r\n    editIdx: -1,\r\n    columnToSort: '',\r\n    sortDirection: 'desc',\r\n    query: '',\r\n    columnToQuery: 'firstName',\r\n    isFavorite: {},\r\n    showFavorite: false\r\n\r\n  };\r\n\r\n  onChange = (updatedValue) => {\r\n    this.setState({\r\n      fields:{ \r\n      ...this.state.fields,\r\n      ...updatedValue}\r\n    })\r\n  }\r\n\r\n  handleSort = (columnName) => {\r\n    this.setState(state => ({\r\n      columnToSort: columnName,\r\n      sortDirection: state.columnToSort === columnName ? invertDirect[state.sortDirection] : 'asc'\r\n\r\n    }))\r\n  }\r\n\r\n  handleRemove = (i) => {\r\n    this.setState(state => ({\r\n      data: state.data.filter((tableRow, idx) => idx !== i)\r\n    }))\r\n  }\r\n\r\n  startEditing = (i) => {\r\n    this.setState({ editIdx: i })\r\n  }\r\n\r\n  stopEditing = () => {\r\n    console.log(this.state.data.isFavorite)\r\n    this.setState({editIdx: -1})\r\n  }\r\n\r\n  clickFav = (i) => {    \r\n   this.setState(state => ({\r\n    isFavorite: { ...state.isFavorite, [i]: !state.isFavorite[i] }\r\n  }));\r\n  }\r\n\r\n  handleChange = (e, name, i) => {\r\n    const {value} = e.target\r\n    this.setState(state => ({\r\n        data: state.data.map((tableRow, idx) => idx === i ? ({...tableRow, [name]: value}) : tableRow)\r\n    }))\r\n  }\r\n\r\n  render()\r\n  {\r\n    const lowerCaseQuery = this.state.query.toLowerCase();\r\n    return(\r\n      <div>\r\n        <ContactForm\r\n          \r\n          onSubmit={submiting => this.setState({\r\n          data: [...this.state.data, submiting]\r\n        })} />\r\n        <Form className='search-form' >\r\n          <FormGroup\r\n            style={{marginLeft: '5rem'}}\r\n            >\r\n            <Form.Field\r\n              width={2} \r\n          placeholder='Odaberi'\r\n          control='select'\r\n          value={this.state.value}\r\n          onChange={(e, index, value) => this.setState({columnToQuery: value})}\r\n        >\r\n        <option value='' >Odaberi</option>\r\n        <option value='firstName' >Ime</option>\r\n        <option value='lastName' >Prezime</option>\r\n        <option value='contactInfo' >Kontakt</option>\r\n          </Form.Field>\r\n            <Form.Input\r\n              width={2} \r\n          placeholder='Traži'\r\n          value={this.state.query}\r\n          onChange={e => this.setState({query: e.target.value})}\r\n            />\r\n            <Form.Button\r\n              positive\r\n              style={{\r\n                width: \"8rem\"\r\n              }}\r\n              >\r\n              <Icon name='star' /> Favorit\r\n              </Form.Button>\r\n            </FormGroup>\r\n          </Form>\r\n        <ContactTable\r\n          clickFav={this.clickFav}\r\n          addFavorite={this.state.addFavorite}\r\n          isFavorite={this.state.isFavorite}\r\n            handleRemove={this.handleRemove}\r\n            startEditing={this.startEditing}\r\n            editIdx={this.state.editIdx}\r\n            stopEditing={this.stopEditing}\r\n            handleChange={this.handleChange}\r\n            handleSort={this.handleSort}\r\n            columnToSort={this.state.columnToSort}\r\n            sortDirection={this.state.sortDirection}\r\n            data={orderBy(this.state.query\r\n                ? this.state.data.filter(x =>\r\n                    x[this.state.columnToQuery]\r\n                      .toLowerCase()\r\n                      .includes(lowerCaseQuery)\r\n                  )\r\n                : this.state.data,\r\n              this.state.columnToSort,\r\n              this.state.sortDirection\r\n            )\r\n                \r\n          }\r\n          tableHeader={[\r\n            {\r\n              name: \"Ime\",\r\n              call: \"firstName\"\r\n            },\r\n            {\r\n              name: \"Prezime\",\r\n              call: \"lastName\"\r\n            },\r\n            {\r\n              name: \"Datum rođenja\",\r\n              call: \"birthDate\"\r\n            },\r\n            {\r\n              name: \"Vrsta kontakta\",\r\n              call: \"contactType\"\r\n            },\r\n            {\r\n              name: \"Kontakt\",\r\n              call: \"contactInfo\"\r\n            }\r\n        ]}\r\n          \r\n          />\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default Adresar; \r\n\r\n\r\n","import React from 'react'\nimport './App.css'\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css'\nimport FormValid from './components/FormValid'\nimport Adresar from './components/Adresar'\n\n\n\n\n\n\nfunction App() {\n  return (\n     <HashRouter>\n     <div className=\"App\">\n        <Switch>\n            <Route exact path='/' component={FormValid} />\n            <Route exact path='/Adresar' component={Adresar} />\n            \n          </Switch>\n      </div>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}